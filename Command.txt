PROJECT COFIGURATION
mkdir node_project
cd node_project


npm init -y


npm install --save-dev typescript


nano tsconfig.json


----------------Added code 
{
  "compilerOptions": {
    "module": "commonjs",
    "esModuleInterop": true,
    "target": "es6",
    "moduleResolution": "node",
    "sourceMap": true,
    "outDir": "dist"
  },
  "lib": ["es2015"]
}


npm install --save express@4.17.1
npm install -save-dev @types/express@4.17.1

mkdir src

nano src/app.ts

import express from 'express';
const app = express();
const port = 3000;

app.get('/', (req, res) => {
  res.send('Hello World!');
});

app.listen(port, () => {
  return console.log(`Express is listening at http://localhost:${port}`);
});




USEr for code compilation

npx tsc  


=================Install packages==================================


npm install -save-dev bcrypt
npm install -save-dev @types/bcrypt

npm install -save-dev body-parser
npm install -save-dev @types/body-parser

npm install -save-dev express
npm install -save-dev @types/express

npm install -save-dev express-validator
npm install -save-dev @types/express-validator

npm install -save-dev jsonwebtoken
npm install -save-dev @types/jsonwebtoken

npm install -save-dev mongoose
npm install -save-dev @types/mongoose

npm install -save-dev node
npm install -save-dev @types/node

npm install -save-dev nodemailer
npm install -save-dev @types/nodemailer

npm install -save-dev nodemon
npm install -save-dev @types/nodemon


npm install -save-dev ts-node


npm install -save-dev @types/ts-node

npm install -g ts-node



npm install -save-dev winston
npm install -save-dev @types/winston
















  //  const  user = await User.findOne(
        //     {
        //         email:email,

        //     });



        winston